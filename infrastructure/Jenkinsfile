pipeline {
  agent any
  options {
    disableConcurrentBuilds()
  }
  stages {
    stage('Deploy') {
        environment {
            FRONTEND_HOST   = credentials('FRONTEND_HOST')
        }
        steps {
            ansiblePlaybook(
                  playbook: 'infrastructure/deploy.yml',
                  inventory: "$FRONTEND_HOST,",
                  credentialsId: "CURRENT_DEPLOY_KEY",
                  hostKeyChecking: false
            )
        }
    }
  }
  post {
    always {
      notifyBuild(currentBuild.result)
    }
  }
}

def notifyBuild(def buildStatus) {
    // set default of build status
    buildStatus =  buildStatus ?: 'SUCCESS'
    GIT_COMMIT_MSG = sh (
        script: "git log --format=format:%s -1 ${GIT_COMMIT}",
        returnStdout: true
    ).trim()
    def emojiMap = [ 'STARTED': '#F0FFFF', 'SUCCESS': 'âœ…', 'FAILURE': 'ðŸ›‘' ]
    telegramSend """
${emojiMap[buildStatus]} *${JOB_NAME}* - ${buildStatus}
${env.RUN_DISPLAY_URL}
${GIT_COMMIT_MSG}
    """
}

